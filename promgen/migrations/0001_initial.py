# Generated by Django 2.2.13 on 2020-11-30 15:52

from django.conf import settings
import django.contrib.sites.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('body', models.TextField()),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('error_count', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, validators=[django.core.validators.RegexValidator('^[\\w][- \\w]+\\Z', 'Unicode letters, numbers, underscores, or hyphens or spaces')])),
                ('source', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'source')},
            },
        ),
        migrations.CreateModel(
            name='Probe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(help_text='Probe Module from blackbox_exporter config', max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator('^[\\w][- \\w]+\\Z', 'Unicode letters, numbers, underscores, or hyphens or spaces')])),
                ('description', models.TextField(blank=True)),
                ('farm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='promgen.Farm')),
                ('owner', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, validators=[django.core.validators.RegexValidator('[a-zA-Z_:][a-zA-Z0-9_:]*', 'Only alphanumeric characters are allowed.')])),
                ('type', models.CharField(choices=[('loki', 'loki'), ('prometheus', 'prometheus')], default='prometheus', help_text='Type of the rule', max_length=16)),
                ('clause', models.TextField(help_text='Prometheus query')),
                ('duration', models.CharField(help_text='Duration field with postfix. Example 30s, 5m, 1d', max_length=128, validators=[django.core.validators.RegexValidator('[0-9]+(ms|[smhdwy])', 'Invalid or missing duration suffix. Example: 30s, 5m, 1h ([0-9]+(ms|[smhdwy])')])),
                ('enabled', models.BooleanField(default=True)),
                ('object_id', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True)),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'promgen'), ('model', 'site')), models.Q(('app_label', 'promgen'), ('model', 'project')), models.Q(('app_label', 'promgen'), ('model', 'service')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='overrides', to='promgen.Rule')),
            ],
            options={
                'ordering': ['content_type', 'object_id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Shard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator('^[\\w][- \\w]+\\Z', 'Unicode letters, numbers, underscores, or hyphens or spaces')])),
                ('url', models.URLField(max_length=256)),
                ('proxy', models.BooleanField(default=False, help_text='Queries can be proxied to these shards')),
                ('enabled', models.BooleanField(default=True, help_text='Able to register new Services and Projects')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('sites.site',),
            managers=[
                ('objects', django.contrib.sites.models.SiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=256)),
                ('probe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Probe')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Project')),
            ],
            options={
                'ordering': ['project__service', 'project', 'url'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator('^[\\w][- \\w]+\\Z', 'Unicode letters, numbers, underscores, or hyphens or spaces')])),
                ('description', models.TextField(blank=True)),
                ('owner', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(max_length=128)),
                ('value', models.CharField(max_length=128)),
                ('alias', models.CharField(blank=True, max_length=128)),
                ('object_id', models.PositiveIntegerField()),
                ('enabled', models.BooleanField(default=True)),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'auth'), ('model', 'user')), models.Q(('app_label', 'promgen'), ('model', 'project')), models.Q(('app_label', 'promgen'), ('model', 'service')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RuleLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('value', models.CharField(max_length=128)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Rule')),
            ],
        ),
        migrations.CreateModel(
            name='RuleAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('value', models.TextField()),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Rule')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Service'),
        ),
        migrations.AddField(
            model_name='project',
            name='shard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Shard'),
        ),
        migrations.CreateModel(
            name='DefaultExporter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.CharField(help_text='Exporter name. Example node, jmx, app', max_length=128)),
                ('port', models.IntegerField(help_text='Port Exporter is running on')),
                ('path', models.CharField(blank=True, help_text='Exporter path. Defaults to /metrics', max_length=128)),
                ('scheme', models.CharField(choices=[('http', 'http'), ('https', 'https')], default='http', help_text='Scrape exporter over http or https', max_length=5)),
            ],
            options={
                'ordering': ['job', 'port'],
                'unique_together': {('job', 'port', 'path')},
            },
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('created', models.DateTimeField()),
                ('data', models.TextField(blank=True)),
                ('old', models.TextField(blank=True)),
                ('object_id', models.PositiveIntegerField(default=0)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AlertLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('value', models.TextField()),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Alert')),
            ],
        ),
        migrations.CreateModel(
            name='AlertError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('message', models.TextField()),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Alert')),
            ],
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('shard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Shard')),
            ],
            options={
                'verbose_name_plural': 'queues',
                'ordering': ['shard', 'name'],
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Farm')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'farm')},
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('value', models.CharField(max_length=128)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Sender')),
            ],
            options={
                'ordering': ('sender', 'name', 'value'),
                'unique_together': {('sender', 'name', 'value')},
            },
        ),
        migrations.CreateModel(
            name='Exporter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.CharField(help_text='Exporter name. Example node, jmx, app', max_length=128)),
                ('port', models.IntegerField(help_text='Port Exporter is running on')),
                ('path', models.CharField(blank=True, help_text='Exporter path. Defaults to /metrics', max_length=128)),
                ('scheme', models.CharField(choices=[('http', 'http'), ('https', 'https')], default='http', help_text='Scrape exporter over http or https', max_length=5)),
                ('enabled', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promgen.Project')),
            ],
            options={
                'ordering': ['job', 'port'],
                'unique_together': {('job', 'port', 'path', 'scheme', 'project')},
            },
        ),
    ]
